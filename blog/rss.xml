<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Data Guru Blog</title>
        <link>https://dataguru.fr/blog</link>
        <description>Data Guru Blog</description>
        <lastBuildDate>Fri, 11 Nov 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[Terraform - Concept & Workflow]]></title>
            <link>https://dataguru.fr/blog/2022/11/01/terraform-concepts-et-workflow</link>
            <guid>/2022/11/01/terraform-concepts-et-workflow</guid>
            <pubDate>Fri, 11 Nov 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Objectifs :]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="objectifs-">Objectifs :<a class="hash-link" href="#objectifs-" title="Lien direct vers le titre">‚Äã</a></h2><ul><li>Comprendre les concepts : <code>terraform core</code> &amp; <code>terraform plugin</code></li><li>Connaitre les diff√©rents workflows de terraform</li></ul><p><img loading="lazy" alt="img.png" src="/assets/images/terraform_orchestrateur-ad503d8eb2b76416b03d39b1917fe329.png" width="1005" height="516"></p><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="rappels--101-terraform">Rappels : 101 Terraform<a class="hash-link" href="#rappels--101-terraform" title="Lien direct vers le titre">‚Äã</a></h2><p>Terraform est un <strong>projet open source</strong> cr√©√© en <strong>2014</strong> par <a href="https://www.hashicorp.com/" target="_blank" rel="noopener noreferrer">Hashicorp</a>.</p><p>A l'√©criture de ce blog, terraform a :</p><ul><li><code>35K</code> ‚≠êÔ∏è</li><li>Plus de <code>30k commits</code></li><li>Plus de <code>1600 contributeurs</code></li></ul><p><img loading="lazy" alt="img.png" src="/assets/images/terraform_github-76aedb9cfc1b6c8bf686ab6db814208d.png" width="1538" height="755">
<em><a href="https://github.com/hashicorp/terraform" target="_blank" rel="noopener noreferrer">https://github.com/hashicorp/terraform</a></em></p><p><strong>Ce qu'on peut faire avec Terraform :</strong></p><ul><li>G√©rer des ressources d'infrastructure de plusieurs <strong>fournisseurs cloud</strong><ul><li>Cr√©er une infrastructure r√©seau sur AWS</li><li>D√©ployer un cluster Kubernetes sur GCP</li></ul></li><li>Int√©ragir avec des <strong>produits d'infrastructure</strong><ul><li>Ins√©rer des secrets dans un Vault </li><li>D√©ployer une application sur Heroku</li></ul></li><li>Configurer des <strong>services d‚Äôinfrastructure</strong><ul><li>Cr√©er un projet/groupe/utilisateur sur GitLab</li><li>Initialiser une base de donn√©es PostgreSQL (et ses utilisateurs)</li></ul></li></ul><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="les-concepts--terraform-core--terraform-plugin">Les concepts : Terraform Core &amp; Terraform Plugin<a class="hash-link" href="#les-concepts--terraform-core--terraform-plugin" title="Lien direct vers le titre">‚Äã</a></h2><p>Terraform a la capacit√© de se <strong>brancher</strong> avec de <strong>nombreux providers</strong> : <em>AWS, GCP, AZURE, ELASTIC...</em> <em>Mais le fonctionnement interne de terraform ne change pas entre 2 providers.</em></p><p>Pour cela, Terraform est compos√© de <strong>2 parties</strong> <em>(s√©par√©es par un contrat d'interfa√ßage)</em> :</p><ul><li><p><strong>Terraform Core :</strong> Il s'agit du binaire Terraform qui communique avec les plugins pour g√©rer les ressources de l'infrastructure.
Il fournit une interface commune qui vous permet de tirer parti de nombreux fournisseurs
de Clouds, bases de donn√©es, services et solutions internes.</p></li><li><p><strong>Terraform Plugin :</strong> Il s'agit de binaires ex√©cutables √©crits en Go qui communiquent avec Terraform Core via une interface RPC. Chaque plugin expose une impl√©mentation pour un service sp√©cifique, tel que le fournisseur AWS ou le
fournisseur cloud-init. </p></li></ul><p><img loading="lazy" alt="img.png" src="/assets/images/terraform_core_plugin-82e1fa4e71a1a3b0541b55c32f2f0055.png" width="983" height="182"></p><p>Actuellement terraform supporte qu'un type de plugin appel√© <a href="https://developer.hashicorp.com/terraform/language/providers" target="_blank" rel="noopener noreferrer">Providers</a>, veuillez retrouver la liste sur ce lien : <a href="https://registry.terraform.io/browse/providers" target="_blank" rel="noopener noreferrer">https://registry.terraform.io/browse/providers</a></p><div class="admonition admonition-tip alert alert--success"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Des custom plugin</h5></div><div class="admonition-content"><p>On peut √©galement d√©velopper nos propres providers, terraform propose un tutoriel : <a href="https://developer.hashicorp.com/terraform/tutorials/providers-plugin-framework/providers-plugin-framework-provider" target="_blank" rel="noopener noreferrer">Implement a Provider with the Terraform Plugin Framework</a></p></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="cin√©matique-g√©n√©rale-de-terraform">Cin√©matique g√©n√©rale de Terraform<a class="hash-link" href="#cin√©matique-g√©n√©rale-de-terraform" title="Lien direct vers le titre">‚Äã</a></h2><ol><li>Le d√©veloppeur(se) üßëüèª‚Äçüíª <strong>d√©veloppe</strong> le code terraform</li><li>Le d√©veloppeur(se) üßëüèª‚Äçüíª <strong>ex√©cute</strong> des commandes terraform</li><li>Terraform lit la <strong>configuration</strong> (code) ainsi que le <strong>fichier d'√©tat</strong> <em>(s'il y en a d√©j√† un)</em></li><li>Terraform cr√©e un <strong>plan d'ex√©cution</strong> : arbre de d√©pendances </li><li>Terraform communique avec les APIs du provider pour <strong>appliquer les changements</strong></li></ol><p><img loading="lazy" alt="img.png" src="/assets/images/cin√©matique_terraform-9c69b0517494a55fb4cbbb7f3ebdea49.png" width="1609" height="562"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="les-workflows-terraform">Les workflows terraform<a class="hash-link" href="#les-workflows-terraform" title="Lien direct vers le titre">‚Äã</a></h2><p>Dans cette section nous allons voir les diff√©rents workflow Terraform : </p><ul><li><code>Workflow standard</code></li><li><code>Workflow lors d'une cr√©ation d'infrastructure</code></li><li><code>Workflow lors d'une mise √† jour d'infrastructure</code></li></ul><h3 class="anchor anchorWithStickyNavbar_mojV" id="workflow-standard">Workflow standard<a class="hash-link" href="#workflow-standard" title="Lien direct vers le titre">‚Äã</a></h3><hr><blockquote><p>Pour mettre en place notre <strong>working directory</strong> il faut lancer la commande suivante :</p><ul><li><code>terraform init</code> </li></ul><p>‚ö†Ô∏è A chaque ajout de nouveau <a href="https://developer.hashicorp.com/terraform/language/modules/syntax" target="_blank" rel="noopener noreferrer">module</a> ou de provider il faudra, re-lancer cette commande.</p></blockquote><p>Une fois l'initialisation faite, le worklow standard pour d√©velopper du terraform peut se r√©sumer en <strong>3 √©tapes</strong> :</p><ol><li><code>terraform plan</code> : <strong>affiche</strong> les changements requis par la configuration actuelle <em>(plan d'ex√©cution)</em></li><li><code>terraform apply</code> : permet d'<strong>appliquer</strong> le plan d'ex√©cution sur l'infrastructure r√©elle.</li><li><code>terraform destroy</code> : permet de <strong>supprimer</strong> toute l'infrastructure cr√©e avec Terraform </li></ol><blockquote><p>üí° Une fois qu'on a d√©velopp√© notre code terraform, on peut le <strong>v√©rifier</strong> avec la commande :
<code>terraform validate</code></p></blockquote><p><img loading="lazy" alt="img.png" src="/assets/images/standard_workflow-2756b41fb4686a55da2be880d9bf3b6f.png" width="1487" height="574"></p><p>Pour aller plus loin : <a href="https://developer.hashicorp.com/terraform/intro/core-workflow" target="_blank" rel="noopener noreferrer">The Core Terraform Workflow</a></p><h3 class="anchor anchorWithStickyNavbar_mojV" id="workflow-lors-dune-cr√©ation-dinfrastructure">Workflow lors d'une cr√©ation d'infrastructure<a class="hash-link" href="#workflow-lors-dune-cr√©ation-dinfrastructure" title="Lien direct vers le titre">‚Äã</a></h3><hr><p>Pour la premi√®re ex√©cution de la commande <code>terraform apply</code> : </p><ul><li>Terraform cr√©e <strong>l'infrastructure</strong> d√©finie dans votre configuration (code terraform).</li><li>Terraform cr√©e le <strong>fichier d'√©tat</strong> : <code>tfstate</code>.  </li></ul><p><img loading="lazy" alt="img.png" src="/assets/images/workflow_creation-a8da6624918444e2c58e0710d9afb2f6.png" width="1560" height="446"></p><p>Le fichier d'√©tat est utilis√© par Terraform pour faire <strong>correspondre</strong> les <strong>ressources du monde r√©el</strong> √† votre <strong>configuration</strong> et conserver la trace des m√©tadonn√©es.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="workflow-lors-dune-mise-√†-jour-dinfrastructure">Workflow lors d'une mise √† jour d'infrastructure<a class="hash-link" href="#workflow-lors-dune-mise-√†-jour-dinfrastructure" title="Lien direct vers le titre">‚Äã</a></h3><hr><ol><li><code>R√©cup√©ration du tfstate</code> :  r√©cup√©rer le dernier √©tat mis √† jour par terraform.</li><li><code>R√©cup√©ration des √©tats r√©els</code> : r√©cup√©rer les √©ventuels changements d'infrastructure, externe √† terraform (modification √† la main).</li><li><code>Application des diff√©rences</code> : cr√©er un plan d'ex√©cution et appliquer ces changements sur l'infrastructure r√©elle.</li><li><code>Mise √† jour du tfstate</code> :  mettre √† jour le tfstate avec l'infrastructure actuelle.</li></ol><p><img loading="lazy" alt="img.png" src="/assets/images/workflow_mise_a_jour-f6c8f96afda787a9bf4426ce7ac13ca6.png" width="1392" height="525"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="conclusion">Conclusion<a class="hash-link" href="#conclusion" title="Lien direct vers le titre">‚Äã</a></h2><p>Terraform a plusieurs <strong>couches d'abstraction</strong> et dans ce blog nous avons couvert : </p><ul><li>L'int√©raction entre Terraform et les APIs des fournisseurs : <code>Terraform Core</code> <strong>&amp;</strong> <code>Terraform Plugin</code></li><li>Les diff√©rents workflows derri√®re la commande <code>terraform apply</code>.</li></ul>]]></content:encoded>
        </item>
    </channel>
</rss>