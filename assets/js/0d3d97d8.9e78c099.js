"use strict";(self.webpackChunkdive_into=self.webpackChunkdive_into||[]).push([[303],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>_});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),_=s,g=m["".concat(o,".").concat(_)]||m[_]||u[_]||r;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function _(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:s,l[1]=i;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},581:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=n(7462),s=(n(7294),n(3905));const r={title:"Postgresql, Miracles Queries",slug:"postgres-miracles-queries"},l=void 0,i={unversionedId:"stockage/2021-04-23-miracles-queries-postgres",id:"stockage/2021-04-23-miracles-queries-postgres",title:"Postgresql, Miracles Queries",description:"Table of contents",source:"@site/docs/stockage/2021-04-23-miracles-queries-postgres.mdx",sourceDirName:"stockage",slug:"/stockage/postgres-miracles-queries",permalink:"/docs/stockage/postgres-miracles-queries",editUrl:"https://github.com/CraftDataEngineer/blog/docs/stockage/2021-04-23-miracles-queries-postgres.mdx",tags:[],version:"current",frontMatter:{title:"Postgresql, Miracles Queries",slug:"postgres-miracles-queries"},sidebar:"docs",previous:{title:"Video Apache Parquet",permalink:"/docs/stockage/2021-03-12-apache-parquet"},next:{title:"Comparaison d'outils pour documentation + blogs",permalink:"/docs/tools/2021-03-16-comparaison-outils-documentation"}},o={},p=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Magic queries",id:"magic-queries",level:2},{value:"The pg_stat_statements View",id:"the-pg_stat_statements-view",level:3},{value:"pg_class:",id:"pg_class",level:3},{value:"Magic indexes query:",id:"magic-indexes-query",level:3},{value:"Observations:",id:"observations",level:2},{value:"Env setup:",id:"env-setup",level:2},{value:"Prerequisite",id:"prerequisite",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#magic-queries"},"Magic queries")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#env-setup"},"Env setup"))),(0,s.kt)("h2",{id:"magic-queries"},"Magic queries"),(0,s.kt)("h3",{id:"the-pg_stat_statements-view"},"The pg_stat_statements View"),(0,s.kt)("hr",null),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},'postgres=# \\d pg_stat_statements\n                    View "public.pg_stat_statements"\n       Column        |       Type       | Collation | Nullable | Default\n---------------------+------------------+-----------+----------+---------\n userid              | oid              |           |          |\n dbid                | oid              |           |          |\n queryid             | bigint           |           |          |\n query               | text             |           |          |\n plans               | bigint           |           |          |\n total_plan_time     | double precision |           |          |\n min_plan_time       | double precision |           |          |\n max_plan_time       | double precision |           |          |\n mean_plan_time      | double precision |           |          |\n stddev_plan_time    | double precision |           |          |\n calls               | bigint           |           |          |\n total_exec_time     | double precision |           |          |\n min_exec_time       | double precision |           |          |\n max_exec_time       | double precision |           |          |\n mean_exec_time      | double precision |           |          |\n stddev_exec_time    | double precision |           |          |\n rows                | bigint           |           |          |\n shared_blks_hit     | bigint           |           |          |\n shared_blks_read    | bigint           |           |          |\n shared_blks_dirtied | bigint           |           |          |\n shared_blks_written | bigint           |           |          |\n local_blks_hit      | bigint           |           |          |\n local_blks_read     | bigint           |           |          |\n local_blks_dirtied  | bigint           |           |          |\n local_blks_written  | bigint           |           |          |\n temp_blks_read      | bigint           |           |          |\n temp_blks_written   | bigint           |           |          |\n blk_read_time       | double precision |           |          |\n blk_write_time      | double precision |           |          |\n wal_records         | bigint           |           |          |\n wal_fpi             | bigint           |           |          |\n wal_bytes           | numeric          |           |          |\n')),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},(0,s.kt)("a",{parentName:"em",href:"https://postgresql.kr/docs/9.1/pgstatstatements.html"},"Columns explanation of pg_stat_statements"))),(0,s.kt)("p",null,"The good one \ud83e\udd47:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT  substring(query,1,50) AS short_query,\n        round(total_exec_time::numeric, 2) AS total_exec_time, \n        calls,\n        round(mean_exec_time::numeric,2) AS mean, \n        round((100*total_exec_time/sum(total_exec_time::numeric) OVER ())::numeric,2) AS percentage_overall\nFROM pg_stat_statements \nORDER BY total_exec_time DESC LIMIT 20;\n")),(0,s.kt)("p",null,"Source : "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=5M2FFbVeLSs&t=766s"},"PostgreSQL performance in 5 minutes"))),(0,s.kt)("p",null,"It gives something like this:"),(0,s.kt)("hr",null),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"-[ RECORD 1 ]------+---------------------------------------------------\nshort_query        | UPDATE pgbench_accounts SET abalance = abalance +\ntotal_exec_time    | 207576.31\ncalls              | 100000\nmean               | 2.08\npercentage_overall | 37.80\n-[ RECORD 2 ]------+---------------------------------------------------\nshort_query        | UPDATE pgbench_branches SET bbalance = bbalance +\ntotal_exec_time    | 136519.42\ncalls              | 100000\nmean               | 1.37\npercentage_overall | 24.86\n-[ RECORD 3 ]------+---------------------------------------------------\nshort_query        | UPDATE pgbench_tellers SET tbalance = tbalance + $\ntotal_exec_time    | 82782.97\ncalls              | 100000\nmean               | 0.83\npercentage_overall | 15.07\n-[ RECORD 4 ]------+---------------------------------------------------\nshort_query        | SELECT abalance FROM pgbench_accounts WHERE aid =\ntotal_exec_time    | 53201.69\ncalls              | 100000\nmean               | 0.53\npercentage_overall | 9.69\n")),(0,s.kt)("h3",{id:"pg_class"},"pg_class:"),(0,s.kt)("hr",null),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT relname as name, relkind as kind, reltuples as estimation_number_lines, relpages as estimation_size_on_disk\nFROM pg_class\nWHERE relname LIKE 'pgbench%';\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"         name          | kind | estimation_number_lines | estimation_size_on_disk\n-----------------------+------+-------------------------+-------------------------\n pgbench_accounts      | r    |                   5e+06 |                   81968\n pgbench_accounts_pkey | i    |                   5e+06 |                   13713\n pgbench_branches      | r    |                      50 |                      65\n pgbench_branches_pkey | i    |                      50 |                       2\n pgbench_history       | r    |                   99640 |                     716\n pgbench_tellers       | r    |                     500 |                      45\n pgbench_tellers_pkey  | i    |                     500 |                       5\n")),(0,s.kt)("p",null,"Make ",(0,s.kt)("strong",{parentName:"p"},"estimation")," on the number of lines and disk size \ud83d\udcbf."),(0,s.kt)("p",null,"Rows are updated by operations : ",(0,s.kt)("inlineCode",{parentName:"p"},"VACUUM, ANALYZE...")),(0,s.kt)("p",null,"source : ",(0,s.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/13/planner-stats.html#id-1.5.13.5.3"},"https://www.postgresql.org/docs/13/planner-stats.html#id-1.5.13.5.3")),(0,s.kt)("h3",{id:"magic-indexes-query"},"Magic indexes query:"),(0,s.kt)("hr",null),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Missing indexes can fix 70% of all performance problems")),(0,s.kt)("p",null,"To diagnoses index problem we can select this table : "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},'postgres=# \\d pg_stat_user_tables\n                      View "pg_catalog.pg_stat_user_tables"\n       Column        |           Type           | Collation | Nullable | Default\n---------------------+--------------------------+-----------+----------+---------\n relid               | oid                      |           |          |\n schemaname          | name                     |           |          |\n relname             | name                     |           |          |\n seq_scan            | bigint                   |           |          |\n seq_tup_read        | bigint                   |           |          |\n idx_scan            | bigint                   |           |          |\n idx_tup_fetch       | bigint                   |           |          |\n n_tup_ins           | bigint                   |           |          |\n n_tup_upd           | bigint                   |           |          |\n n_tup_del           | bigint                   |           |          |\n n_tup_hot_upd       | bigint                   |           |          |\n n_live_tup          | bigint                   |           |          |\n n_dead_tup          | bigint                   |           |          |\n n_mod_since_analyze | bigint                   |           |          |\n last_vacuum         | timestamp with time zone |           |          |\n last_autovacuum     | timestamp with time zone |           |          |\n last_analyze        | timestamp with time zone |           |          |\n last_autoanalyze    | timestamp with time zone |           |          |\n vacuum_count        | bigint                   |           |          |\n autovacuum_count    | bigint                   |           |          |\n analyze_count       | bigint                   |           |          |\n autoanalyze_count   | bigint                   |           |          |\n')),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/13/monitoring-stats.html#MONITORING-PG-STAT-ALL-TABLES-VIEW"},"pg_stat_all_tables")),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=5M2FFbVeLSs&t=1000s"},"16min30")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT schemaname, relname, seq_scan, seq_tup_read, idx_scan, seq_tup_read / seq_scan as avg FROM pg_stat_user_tables WHERE seq_scan > 0 ORDER BY seq_tup_read DESC;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"-[ RECORD 1 ]+-----------------\nschemaname   | public\nrelname      | pgbench_accounts\nseq_scan     | 2\nseq_tup_read | 5000000\nidx_scan     | 200000\navg          | 2500000\n-[ RECORD 2 ]+-----------------\nschemaname   | public\nrelname      | t_person\nseq_scan     | 3\nseq_tup_read | 5000000\nidx_scan     |\navg          | 1666666\n-[ RECORD 3 ]+-----------------\nschemaname   | public\nrelname      | pgbench_branches\nseq_scan     | 45684\nseq_tup_read | 2284200\nidx_scan     | 54318\navg          | 50\n")),(0,s.kt)("h2",{id:"observations"},"Observations:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Usually those tables listed here will show up in pg_stat_statements too")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"You usually see: "),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Potential missing indexes "),(0,s.kt)("li",{parentName:"ul"},"Pointless operations")))),(0,s.kt)("p",null,"\u2192  candidate missing index "),(0,s.kt)("h2",{id:"env-setup"},"Env setup:"),(0,s.kt)("h3",{id:"prerequisite"},"Prerequisite"),(0,s.kt)("hr",null),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Docker installed")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},'docker run --name postgres -p 5432:5432  -e POSTGRES_PASSWORD="0205" -e POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"# Password is 0205\npsql -h 0.0.0.0 -d postgres -U postgres \n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"# You have to enable this extension if it is not already enabled\nCREATE EXTENSION pg_stat_statements; \n\nSELECT * FROM pg_stat_statements;\n")))}u.isMDXComponent=!0}}]);